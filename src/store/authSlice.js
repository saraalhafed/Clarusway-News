import { createSlice } from '@reduxjs/toolkit';
import axios from 'axios';

// State: The slice manages a specific portion of the Redux state. For example, you might have slices for user, posts, comments, etc., where each slice handles its own state.

// Reducers: These are functions that specify how the sliceâ€™s state should change in response to actions. Each slice typically has its own set of reducers to handle state updates.

// Actions: These are functions generated by Redux Toolkit that can be dispatched to trigger the corresponding reducers. They are automatically created based on the reducer functions defined in the slice.
const initialState = {
  user: '',
  username: '',
  token: '',
  email: '',
};
const authSlice = createSlice({
  name: 'auth',
  initialState,
  //   reducers are like employees taking actions
  reducers: {
    // auth is responsible for updating the state
    /* to see this object in postman i need to paste my (apikey/auth/login) wich is in rest api authentiction ,and give in body the requerd data wich is email and password */
    auth(state, action) {           /* we choose what we need from this obj in postman */
      state.username = action.payload.user.username; /* from postman i see ,data :{token,user:{ userName}}  */
      state.user = action.payload.user.username;
      state.token = action.payload.token;   
      state.email = action.payload.user.email;
      console.log(action.payload);
      console.log(state)
    },
    logout(state) {        /* we make just for logout export , auth is enternal action */
      state.user = '';
    },
  },
});
// action: The second parameter, action, contains information about the action being dispatched, including any data sent with the action (called payload).


/* to use async fun in redux we use (async action) ,reducer is a pure func canot handel async func in redux */
// input has {email, password}
export const login = (input) => {
  return async (dispatch) => {
    try {
      const response = await axios({
        url: 'https://10004.fullstack.clarusway.com/auth/login',
        method: 'POST',
        data: input,
      });

      console.log(response);
      const data = response.data;

      // call the auth reducer to update the state(i connt update the state direct in the reducers)
      dispatch(authSlice.actions.auth(data));
    } catch (error) {
      alert(error.message || 'Something went wrong!');
    }
  };
};

export const { logout } = authSlice.actions;
export default authReducer
export const authReducer = authSlice.reducer;

/* for the slice the user is objc {email,password} =action.payload */
/* payload :like   store  it give me what inside it when i click on btn and action happend*/
/* take the user value from action.payload */